import tensorflow as tf
from tensorflow.keras.layers import Dense, Reshape, Flatten
from tensorflow.keras.models import Sequential
from tensorflow.keras.optimizers import Adam

latent_dim = 100

generator = Sequential([
    Dense(128 * 7 * 7, input_dim=latent_dim, activation='relu'),
    Reshape((7, 7, 128)),
    tf.keras.layers.Conv2DTranspose(128, (4,4), strides=(2,2), padding='same', activation='relu'),
    tf.keras.layers.Conv2DTranspose(128, (4,4), strides=(2,2), padding='same', activation='relu'),
    tf.keras.layers.Conv2D(1, (7,7), padding='same', activation='sigmoid')
])

discriminator = Sequential([
    tf.keras.layers.Conv2D(64, (3,3), strides=(2,2), padding='same', input_shape=(28,28,1)),
    tf.keras.layers.LeakyReLU(alpha=0.2),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Conv2D(128, (3,3), strides=(2,2), padding='same'),
    tf.keras.layers.LeakyReLU(alpha=0.2),
    tf.keras.layers.Dropout(0.3),
    Flatten(),
    Dense(1, activation='sigmoid')
])

gan = Sequential([generator, discriminator])
optimizer = Adam(lr=0.0002, beta_1=0.5)
gan.compile(loss='binary_crossentropy', optimizer=optimizer)
